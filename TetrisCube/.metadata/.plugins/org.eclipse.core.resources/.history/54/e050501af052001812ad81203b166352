package graphics;

import java.nio.FloatBuffer;
import java.nio.IntBuffer;

import com.jogamp.opengl.GL4;
import com.jogamp.opengl.util.glsl.ShaderState;

public class BoxFrame {
	static final FloatBuffer vertex_data = FloatBuffer.wrap(new float[] {
		-2, -2,  2,
		-2,  2,  2,
		 2,  2,  2,
		 2, -2,  2,
		 2, -2, -2,
		 2,  2, -2,
		-2,  2, -2,
		-2, -2, -2
	});
	
	static final IntBuffer index_data = IntBuffer.wrap(new int[] {
			0,1,
			0,3,
			0,7,
			1,2,
			1,6,
			2,3,
			2,5,
			3,4,
			4,5,
			4,7,
			5,6,
			6,7
	});
	
	static final FloatBuffer color_data = FloatBuffer.wrap(colors());
	
	static final int VERTEX_BUFFER = 0;
	static final int COLOR_BUFFER = 1;
	static final int INDEX_BUFFER = 2;
	
	private GL4 gl;
	private ShaderState st;
	private int[] buffers;
	
	public BoxFrame(GL4 gl, ShaderState st) {
		this.gl = gl;
		this.st = st;
		this.buffers = new int[3];
		this.gl.glGenBuffers(3, buffers, 0);
		this.gl.glBindBuffer(GL4.GL_ARRAY_BUFFER, this.buffers[VERTEX_BUFFER]);
		this.gl.glBufferData(GL4.GL_ARRAY_BUFFER, 4*vertex_data.capacity(), vertex_data, GL4.GL_STATIC_DRAW);
		this.gl.glBindBuffer(GL4.GL_ARRAY_BUFFER, this.buffers[COLOR_BUFFER]);
		this.gl.glBufferData(GL4.GL_ARRAY_BUFFER, 4*color_data.capacity(), color_data, GL4.GL_STATIC_DRAW);
		this.gl.glBindBuffer(GL4.GL_ELEMENT_ARRAY_BUFFER, this.buffers[INDEX_BUFFER]);
		this.gl.glBufferData(GL4.GL_ELEMENT_ARRAY_BUFFER, 4*index_data.capacity(), index_data, GL4.GL_STATIC_DRAW);
	}

	public void draw() {
		int vertexPositionID = this.st.getAttribLocation(this.gl, "vertexPosition");
		int vertexColorID = this.st.getAttribLocation(this.gl, "vertexColor");
		gl.glEnableVertexAttribArray(vertexPositionID);
		gl.glEnableVertexAttribArray(vertexColorID);
		
		this.gl.glBindBuffer(GL4.GL_ARRAY_BUFFER, this.buffers[VERTEX_BUFFER]);
		this.gl.glVertexAttribPointer(vertexPositionID, 3, GL4.GL_FLOAT, false, 0, 0);
		this.gl.glBindBuffer(GL4.GL_ARRAY_BUFFER, this.buffers[COLOR_BUFFER]);
		this.gl.glVertexAttribPointer(vertexColorID, 3, GL4.GL_FLOAT, false, 0, 0);
		
		this.gl.glBindBuffer(GL4.GL_ELEMENT_ARRAY_BUFFER, this.buffers[INDEX_BUFFER]);

		gl.glDrawElements(GL4.GL_LINES, index_data.capacity(), GL4.GL_UNSIGNED_INT, 0);
		
		gl.glDisableVertexAttribArray(vertexPositionID);
		gl.glDisableVertexAttribArray(vertexColorID);
	}
	
	public static float[] colors() {
		float[] c = new float[vertex_data.capacity()];
		for (int i=0; i<c.length; i++) {
			c[i] = 0;
		}
		return c;
	}
}
